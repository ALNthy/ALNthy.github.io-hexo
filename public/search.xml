<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用Hexo和github pages服务搭建一个免费的博客</title>
    <url>/2022/05/06/1/</url>
    <content><![CDATA[<p> 去年才知道github有个静态站点托管服务，今年了解到了hexo这个框架。索性就拿靠这两个东西来搭建一个简单的博客。</p>
<hr>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装<a href="https://registry.npmmirror.com/binary.html?;path=git-for-windows/">git</a>;</li>
<li>安装<a href="http://nodejs.cn/download/">nodejs</a>;</li>
<li>注册一个github账号;</li>
<li>创建一个项目 项目名为 ”你的github名字“.github.io;</li>
<li>在<a href="https://github.com/settings/tokens">这里</a>生成自己的个人访问令牌(不懂英文就全选，做好保密工作);</li>
</ul>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><span id="more"></span>
<p>打开cmd 在cmd中输入安装hexo</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>安装成功后在输入一下命令创建并进入博客项目文件夹</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line"><span class="built_in">cd</span> myblog</span><br></pre></td></tr></table></figure>

<p>这样就构建完成了，输入以下命令浏览博客:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo g;hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo博客默认的端口是4000</p>
</blockquote>
<p><img src="/images/4000.png" alt="4000"></p>
<p>直接访问<a href="http://localhost:4000/%EF%BC%8C%E4%B8%8B%E5%9B%BE%E5%B0%B1%E6%98%AF%E5%AE%89%E8%A3%85%E5%A5%BD%E7%9A%84%E6%A0%B7%E5%AD%90">http://localhost:4000/，下图就是安装好的样子</a></p>
<p><img src="/images/hexo.png" alt="hexo"></p>
<h2 id="部署博客到github"><a href="#部署博客到github" class="headerlink" title="部署博客到github"></a>部署博客到github</h2><p> 在项目目录下找到_config.yml文件打开并找到deploy，修改它为</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"> <span class="attr">repository:</span> <span class="string">刚刚你创建的github仓库的地址</span></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<p>完成后直接</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>之后会弹出一个giehub界面,你可已选择登录自己的github账号或者输入刚才生成的令牌.</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">remote: <span class="title">Resolving</span> <span class="title">deltas</span>: 100% (12/12), <span class="title">completed</span> <span class="title">with</span> 8 <span class="title">local</span> <span class="title">objects</span>.</span></span><br><span class="line"><span class="function"><span class="title">remote</span>: <span class="title">This</span> <span class="title">repository</span> <span class="title">moved</span>. <span class="title">Please</span> <span class="title">use</span> <span class="title">the</span> <span class="title">new</span> <span class="title">location</span>:</span></span><br><span class="line"><span class="function"><span class="title">remote</span>:   <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">ALNthy</span>/<span class="title">alnthy.github.io.git</span></span></span><br><span class="line"><span class="function"><span class="title">To</span> <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">ALNthy</span>/<span class="title">ALNthy.github.io.git</span></span></span><br><span class="line"><span class="function">   23<span class="title">f1eab</span>..37<span class="title">de925</span>  <span class="title">HEAD</span> -&gt; <span class="title">main</span></span></span><br><span class="line"><span class="function"><span class="title">branch</span> &#x27;<span class="title">master</span>&#x27; <span class="title">set</span> <span class="title">up</span> <span class="title">to</span> <span class="title">track</span> &#x27;<span class="title">https</span>://<span class="title">github.com</span>/<span class="title">ALNthy</span>/<span class="title">ALNthy.github.io.git</span>/<span class="title">main</span>&#x27;.</span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Deploy</span> <span class="title">done</span>: <span class="title">git</span></span></span><br></pre></td></tr></table></figure>
<p>成功！！！！</p>
<p>之后你就可以在浏览器上输入 “你github的名字”.github.io 访问你的博客了,例如<a href="http://alnthy.github.io/">ALNthy.github.io</a></p>
<h3 id="补充一些hexo常用命令"><a href="#补充一些hexo常用命令" class="headerlink" title="补充一些hexo常用命令"></a>补充一些hexo常用命令</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line"># 编译生成静态文件</span><br><span class="line">hexo d</span><br><span class="line"># 部署博客</span><br><span class="line">hexo g -d</span><br><span class="line"># g 跟 d 一起使用</span><br><span class="line">hexo clean</span><br><span class="line"># 清除以前生成的静态文件。</span><br><span class="line"># 通常，清理一下可以解决大多数问题。</span><br><span class="line">hexo s</span><br><span class="line"># 本地预览博客</span><br><span class="line">hexo new xxx</span><br><span class="line"># 新建一篇标题为xxx的文章</span><br><span class="line">hexo new draft xxx</span><br><span class="line"># 新建一篇标题为xxx的草稿</span><br><span class="line">hexo new page xxx</span><br><span class="line"># 新建一个页面</span><br><span class="line">hexo <span class="built_in">help</span></span><br><span class="line">#查看帮助</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果你想了解更多关于hexo的内容和装饰一下自己的博客你可以关注一下hexo的<a href="https://hexo.io/docs/">文档</a>和<a href="https://hexo.io/themes/">主题</a></p>
</blockquote>
]]></content>
      <categories>
        <category>测试</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>hexo</tag>
        <tag>js</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>C#中的泛型</title>
    <url>/2022/12/05/3/</url>
    <content><![CDATA[<p>泛型 (Generic)，是将不确定的类型预先定义下来的一种C#高级语法，我们在使用一个类，接口或者方法前，不知道用户将来传什么类型，或者我们写的类，接口或方法相同的代码可以服务不同的类型，就可以定义为泛型。<br>平时编程时经常会遇到功能相似但是处理的数据的却不同的场景，这时候泛型就能解决此类问题;</p>
<span id="more"></span>

<h2 id="泛型的定义"><a href="#泛型的定义" class="headerlink" title="泛型的定义"></a>泛型的定义</h2><p>支持泛型定义的数据结构有类，接口，方法，委托</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyGeneric</span>&lt;<span class="title">T</span>&gt;</span>&#123;...code...&#125;<span class="comment">//泛型类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">GenericMethod</span>&lt;<span class="title">T</span>&gt;</span>&#123;...code...&#125;<span class="comment">//泛型方法</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title">IGeneric</span>&lt;<span class="title">T</span>&gt;&#123;...code...&#125;<span class="comment">//泛型接口</span></span><br><span class="line"><span class="function"><span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">DeleGeneric</span>&lt;<span class="title">T1</span>,<span class="title">T2</span>&gt;()</span>;<span class="comment">//泛型委托</span></span><br></pre></td></tr></table></figure>

<h2 id="泛型的常用场景"><a href="#泛型的常用场景" class="headerlink" title="泛型的常用场景"></a>泛型的常用场景</h2><h3 id="最常见的场景之一"><a href="#最常见的场景之一" class="headerlink" title="最常见的场景之一"></a>最常见的场景之一</h3><p>除了传入的参数不同外，其里面实现的功能都是一样的</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">ceshi</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ClassT</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestPrint</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestPrint</span>(<span class="params"><span class="built_in">int</span> i32</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(i32);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestPrint</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(dateTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Ceshi</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            ClassT.TestPrint(<span class="string">&quot;泛型&quot;</span>);</span><br><span class="line">            ClassT.TestPrint(<span class="number">10086</span>);</span><br><span class="line">            ClassT.TestPrint(DateTime.Now);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">泛型</span><br><span class="line"><span class="number">10086</span></span><br><span class="line"><span class="number">2022</span>/<span class="number">12</span>/<span class="number">5</span> <span class="number">18</span>:<span class="number">21</span>:<span class="number">59</span></span><br></pre></td></tr></table></figure>

<p>使用泛型简化:</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">ceshi</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ClassT</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestPrint</span>&lt;<span class="title">T</span>&gt;(<span class="params">T t</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Ceshi</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            ClassT.TestPrint(<span class="string">&quot;泛型&quot;</span>);</span><br><span class="line">            ClassT.TestPrint(<span class="number">10086</span>);</span><br><span class="line">            ClassT.TestPrint(DateTime.Now);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">泛型</span><br><span class="line"><span class="number">10086</span></span><br><span class="line"><span class="number">2022</span>/<span class="number">12</span>/<span class="number">5</span> <span class="number">18</span>:<span class="number">25</span>:<span class="number">35</span></span><br></pre></td></tr></table></figure>

<p>由此可见泛型大大减少了代码重复度</p>
]]></content>
      <categories>
        <category>C#</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>11月疫情后12月9日提前放假回家</title>
    <url>/2022/12/09/4/</url>
    <content><![CDATA[<p>十一月被关在学校里一个月，十二月九日就踏上回家的路途。<br>这次放寒假也意味着三年的<del>大专</del>（大学）生活就此结束，来年也要为实习忙碌。</p>
<span id="more"></span>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_114554.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">在打游戏的室友</div>
    <br>
</center>

<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_091458.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">我的电脑</div>
    <br>
</center>


<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_114536.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">宿舍下的街道</div>
    <br>
</center>


<p>十二月疫情政策也开始放开了，出行不用在看码了,这三年疫情终于结束了</p>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_130711.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">候车室里的人群</div>
    <br>
</center>

<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_140011.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">高铁上</div>
    <br>
</center>



<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_161643.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">出站</div>
    <br>
</center>


<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221209_162136.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">永州站前的广场</div>
    <br>
</center>

<p>安全到家。</p>
<br>

<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/IMG_20221211_122434.jpg">
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">老家旁边的银杏树</div>
    <br>
</center>


]]></content>
      <categories>
        <category>生活日常</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日常</tag>
      </tags>
  </entry>
</search>
